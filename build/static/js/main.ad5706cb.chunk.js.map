{"version":3,"sources":["WeatherDetail.js","LocationDetail.js","WeeklyDetail.js","Loader.js","WeatherAPI.js","App.js","index.js"],"names":["WeatherDetail","_ref","weather","number","react_default","a","createElement","className","shortForecast","temperature","windDirection","windSpeed","time","cut","slice","charAt","timeStamp","startTime","src","concat","toLowerCase","replace","alt","title","LocationDetail","location","city","WeeklyDetail","weekly","name","includes","Loader","props","errorText","defaultProps","message","WeatherApi","state","weatherData","hourlyWeatherData","weeklyForecast","errorMessge","_this2","this","window","navigator","geolocation","getCurrentPosition","position","fetch","coords","latitude","longitude","then","response","json","responseData","setState","getLocalForcast","err","_this3","properties","forecastHourly","forecast","periods","map","src_WeatherDetail","key","src_WeeklyDetail","hasOwnProperty","src_LocationDetail","relativeLocation","isDaytime","_this4","length","src_Loader","week","getWeatherForBackground","renderLocation","renderWeather","renderWeekly","renderContent","React","Component","App","WeatherAPI","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ad5706cb.chunk.js","sourcesContent":["import './style/WeatherDetail.css';\nimport React from 'react';\n\nconst timeStamp = (time) => {\n\tlet cut = time.slice(11,13);\n\n\tif (cut >= 13) {\n\t\treturn cut = cut - 12 + ' PM';\n\t}\n\telse if (cut == 0) {\n\t\treturn cut = 12 + ' AM';\n\t}\n\telse if (cut < 12){\n\t\tif(cut.charAt( 0 ) === '0') {\n\t\t return cut = cut.slice( 1 ) + ' AM'\n\t\t}\n\t\t return cut = cut + ' AM';\n\t}\n\t\treturn cut = cut + ' PM'\n}\n\n\n\nconst WeatherDetail = ({weather}) => {\n\n\tif(weather.number === 1) {\n\treturn (\n<div className=\"currentForecastContainer\">\n<div className=\"currentForecast\">{weather.shortForecast}</div>\n<div className=\"currentTemp\">{weather.temperature}&#176;F</div>\n<div className=\"currentWind\">{weather.windDirection} {weather.windSpeed}</div>\n</div>\n\t\t)\n}\nreturn (\n\t<div className=\"hourlyForecast\">\n<div>{timeStamp(weather.startTime)}</div>\n<img src={`/weather-app/img/icons/${weather.shortForecast.toLowerCase().replace(/\\s/g, \"\")}.png`} alt={weather.shortForecast} title={weather.shortForecast}></img>\n<div className=\"hourlyTemp\">{weather.temperature}&#176;F</div>\n</div>\n)\n}\n\n\nexport default WeatherDetail;\n","import './style/LocationDetail.css';\nimport React from 'react';\n\nconst LocationDetail = ({location}) => {\n\treturn (\n<div className=\"location\">{location.city}</div>\n\t\t)\n}\n\n\nexport default LocationDetail;\n","import './style/WeeklyDetail.css';\nimport React from 'react';\n\n\nconst WeeklyDetail = ({weekly}) => {\n    if(!weekly.name.includes(' Night')){\n\n\treturn (\n    <div className=\"ui grid weeklyDetailContainer\">\n<div className=\"four wide column DayOfWeek\">{weekly.name}</div>\n<div className=\"four wide column TempOfWeek\">{weekly.temperature}&#176;F</div>\n<div className=\"four wide column ForecastOfWeek\"><img src={`/weather-app/img/icons/${weekly.shortForecast.toLowerCase().replace(/\\s/g, \"\")}.png`} alt={weekly.shortForecast} title={weekly.shortForecast}></img></div>\n<div className=\"four wide column Wind\">{weekly.windSpeed}</div>\n</div>\n\t\t)\n}\nreturn<div></div>\n}\n\n\nexport default WeeklyDetail;\n","import './style/loader.css';\nimport React from 'react';\n\nconst Loader = (props) => {\n    return <div className=\"ui segment\">\n  <div className=\"ui active dimmer\">\n    <div className=\"ui text loader\">{props.errorText}</div>\n  </div>\n  <p></p>\n</div>\n}\n\nLoader.defaultProps = {\n\tmessage: 'Loading...'\n}\n\nexport default Loader;\n","import './style/Backgrounds.css';\nimport React from 'react';\nimport WeatherDetail from './WeatherDetail';\nimport LocationDetail from './LocationDetail';\nimport WeeklyDetail from './WeeklyDetail';\nimport Loader from './Loader';\n\nclass WeatherApi extends React.Component {\n    //set our initial state to empty array\n    state = { weatherData: [], hourlyWeatherData: [], weeklyForecast: [], errorMessge: '' };\n\n    componentWillMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) =>\n            fetch(`https://api.weather.gov/points/${position.coords.latitude},${position.coords.longitude}`)\n            .then((response) => response.json())\n            //set the state for weatherData\n            .then((responseData) => this.setState({ weatherData: responseData }))\n            //call getLocalForcast once api data is returned and make second call to get local forecast\n            .then(() => this.getLocalForcast(this.state.weatherData)),\n            (err) => this.setState({ errorMessge: err.message })\n        );\n\n\n    }\n\n    getLocalForcast(responseData) {\n        //once we have the location forecast URL make call to second API for forecast details.\n            const location = responseData.properties.forecastHourly;\n            const weekly = responseData.properties.forecast;\n            fetch(location)\n                .then((response) => response.json())\n                //set the state to 5 day forecast data\n                .then((responseData) => this.setState({ hourlyWeatherData: responseData.properties.periods }));\n                fetch(weekly)\n        .then((response) => response.json())\n        //set the state to weekly forecast data\n        .then((responseData) => this.setState({ weeklyForecast: responseData.properties.periods }));\n        }\n\n\n    renderWeather() {\n        return this.state.hourlyWeatherData.slice(0, 24).map(weather => <WeatherDetail key={weather.number} weather={weather} />);\n        \n    }\n\n    renderWeekly() {\n        return this.state.weeklyForecast.map(weekly => <WeeklyDetail key={weekly.number} weekly={weekly} />);\n        \n    }\n\n    renderLocation() {\n        if (this.state.weatherData.hasOwnProperty('properties')) {\n            return <LocationDetail location={this.state.weatherData.properties.relativeLocation.properties} />\n        }\n    }\n\n\n    getWeatherForBackground(weather) {\n\n        if (!weather.isDaytime ) {\n            return(`night`)\n        }\n        if (weather.shortForecast.toLowerCase().includes('sunny')) {\n            return('sunny');\n        }\n        if (weather.shortForecast.toLowerCase().includes('thunder')) {\n            return('thunderstorm');\n        }\n        return(`${weather.shortForecast.toLowerCase()}`);\n    }\n\n\n\n\n    renderContent() {\n        if(this.state.weatherData.length === 0) {\n            return <div><Loader errorText=\"Please accept the location request\" /></div>\n        }\n        if (this.state.weatherData.length !== 0 && !this.state.errorMessge) {\n            return <div className={this.state.hourlyWeatherData.slice(0, 1).map( week => this.getWeatherForBackground(week))}>\n            {this.renderLocation()}\n            <div className='TopSlider'>\n            {this.renderWeather()}\n            </div>\n            <div className=\"detailContainer\">\n                {this.renderWeekly()}\n                </div>\n                        </div>\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n            { this.renderContent() }\n            </div>\n        )\n    }\n}\n\nexport default WeatherApi;\n"," import './style/App.css';\nimport React from 'react';\nimport WeatherAPI from './WeatherAPI';\n\nfunction App() {\n  return (\n<div className='app'>\n<WeatherAPI />\n</div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}