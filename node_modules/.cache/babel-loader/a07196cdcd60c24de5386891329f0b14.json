{"ast":null,"code":"var _jsxFileName = \"/Users/scottmontgomery/Desktop/weather-app/src/WeatherAPI.js\";\nimport './style/Backgrounds.css';\nimport React from 'react';\nimport LocationDetail from './LocationDetail';\nimport WeeklyDetail from './WeeklyDetail';\nimport Loader from './Loader';\nimport getWeatherForBackground from './funcs/getWeatherForBackground.js';\nimport renderWeather from './funcs/renderWeather';\nconst dummy = [{\n  \"number\": 1,\n  \"startTime\": \"2019-07-25T10:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": '?',\n  \"windSpeed\": \"\",\n  \"shortForecast\": \"failed to get current weather\"\n}, {\n  \"number\": 2,\n  \"startTime\": \"2019-07-25T11:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 3,\n  \"startTime\": \"2019-07-25T12:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 4,\n  \"startTime\": \"2019-07-25T13:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 5,\n  \"startTime\": \"2019-07-25T14:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 6,\n  \"startTime\": \"2019-07-25T15:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 7,\n  \"startTime\": \"2019-07-25T16:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 8,\n  \"startTime\": \"2019-07-25T17:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 9,\n  \"startTime\": \"2019-07-25T18:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 10,\n  \"startTime\": \"2019-07-25T19:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 11,\n  \"startTime\": \"2019-07-25T20:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 12,\n  \"startTime\": \"2019-07-25T21:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 13,\n  \"startTime\": \"2019-07-25T22:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 14,\n  \"startTime\": \"2019-07-25T23:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 15,\n  \"startTime\": \"2019-07-25T00:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 16,\n  \"startTime\": \"2019-07-25T01:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 17,\n  \"startTime\": \"2019-07-25T02:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 18,\n  \"startTime\": \"2019-07-25T03:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 19,\n  \"startTime\": \"2019-07-25T04:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 20,\n  \"startTime\": \"2019-07-25T05:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 21,\n  \"startTime\": \"2019-07-25T06:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 22,\n  \"startTime\": \"2019-07-25T07:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 23,\n  \"startTime\": \"2019-07-25T08:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}, {\n  \"number\": 24,\n  \"startTime\": \"2019-07-25T09:00:00-05:00\",\n  \"isDaytime\": true,\n  \"temperature\": 0,\n  \"shortForecast\": \"missing\"\n}];\n\nclass WeatherApi extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weatherData: [],\n      hourlyWeatherData: [],\n      weeklyForecast: [],\n      errorMessge: ''\n    };\n  }\n\n  componentWillMount() {\n    window.navigator.geolocation.getCurrentPosition(position => fetch(\"https://api.weather.gov/points/\".concat(position.coords.latitude, \",\").concat(position.coords.longitude)).then(response => response.json()) //set the state for weatherData\n    .then(responseData => this.setState({\n      weatherData: responseData\n    })) //call getLocalForcast once api data is returned and make second call to get local forecast\n    .then(() => this.getLocalForcast(this.state.weatherData)), err => this.setState({\n      errorMessge: err.message\n    }));\n  }\n\n  getLocalForcast(responseData) {\n    //once we have the location forecast URL make call to second API for forecast details.\n    const location = responseData.properties.forecastHourly;\n    const weekly = responseData.properties.forecast;\n    fetch(location).then(response => response.json()) //set the state to 5 day forecast data\n    .then(responseData => this.setState({\n      hourlyWeatherData: responseData.properties.periods\n    })) //if response returns an error just serve up a genaric background without hourly forecast\n    .catch(error => this.setState({\n      hourlyWeatherData: dummy\n    }));\n    fetch(weekly).then(response => response.json()) //set the state to weekly forecast data\n    .then(responseData => this.setState({\n      weeklyForecast: responseData.properties.periods\n    })).catch(error => this.setState({\n      weeklyForecast: dummy\n    }));\n  }\n\n  renderWeekly() {\n    return this.state.weeklyForecast.map(weekly => React.createElement(WeeklyDetail, {\n      key: weekly.number,\n      weekly: weekly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n  renderLocation() {\n    if (this.state.weatherData.hasOwnProperty('properties')) {\n      return React.createElement(LocationDetail, {\n        location: this.state.weatherData.properties.relativeLocation.properties,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderContent() {\n    if (this.state.weatherData.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        errorText: \"Please accept the location request\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n\n    if (this.state.weatherData.length !== 0 && !this.state.errorMessge) {\n      return React.createElement(\"div\", {\n        className: this.state.hourlyWeatherData.slice(0, 1).map(week => getWeatherForBackground(week)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.renderLocation(), React.createElement(\"div\", {\n        className: \"TopSlider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.renderWeather(this.state.hourlyWeatherData)), React.createElement(\"div\", {\n        className: \"detailContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.renderWeekly()));\n    }\n  }\n\n  render() {\n    console.log(this.state.hourlyWeatherData);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.renderContent());\n  }\n\n}\n\nexport default WeatherApi;","map":{"version":3,"sources":["/Users/scottmontgomery/Desktop/weather-app/src/WeatherAPI.js"],"names":["React","LocationDetail","WeeklyDetail","Loader","getWeatherForBackground","renderWeather","dummy","WeatherApi","Component","state","weatherData","hourlyWeatherData","weeklyForecast","errorMessge","componentWillMount","window","navigator","geolocation","getCurrentPosition","position","fetch","coords","latitude","longitude","then","response","json","responseData","setState","getLocalForcast","err","message","location","properties","forecastHourly","weekly","forecast","periods","catch","error","renderWeekly","map","number","renderLocation","hasOwnProperty","relativeLocation","renderContent","length","slice","week","render","console","log"],"mappings":"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","sourcesContent":["import './style/Backgrounds.css';\nimport React from 'react';\nimport LocationDetail from './LocationDetail';\nimport WeeklyDetail from './WeeklyDetail';\nimport Loader from './Loader';\nimport getWeatherForBackground from './funcs/getWeatherForBackground.js';\nimport renderWeather from './funcs/renderWeather';\n\nconst dummy = [{\"number\": 1,\"startTime\": \"2019-07-25T10:00:00-05:00\",\"isDaytime\": true,\"temperature\": '?',\"windSpeed\": \"\",\"shortForecast\": \"failed to get current weather\"},{\"number\": 2,\"startTime\": \"2019-07-25T11:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 3,\"startTime\": \"2019-07-25T12:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 4,\"startTime\": \"2019-07-25T13:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 5,\"startTime\": \"2019-07-25T14:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 6,\"startTime\": \"2019-07-25T15:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 7,\"startTime\": \"2019-07-25T16:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 8,\"startTime\": \"2019-07-25T17:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 9,\"startTime\": \"2019-07-25T18:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 10,\"startTime\": \"2019-07-25T19:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 11,\"startTime\": \"2019-07-25T20:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 12,\"startTime\": \"2019-07-25T21:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 13,\"startTime\": \"2019-07-25T22:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 14,\"startTime\": \"2019-07-25T23:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 15,\"startTime\": \"2019-07-25T00:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 16,\"startTime\": \"2019-07-25T01:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 17,\"startTime\": \"2019-07-25T02:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 18,\"startTime\": \"2019-07-25T03:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 19,\"startTime\": \"2019-07-25T04:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 20,\"startTime\": \"2019-07-25T05:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 21,\"startTime\": \"2019-07-25T06:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 22,\"startTime\": \"2019-07-25T07:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 23,\"startTime\": \"2019-07-25T08:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"},{\"number\": 24,\"startTime\": \"2019-07-25T09:00:00-05:00\",\"isDaytime\": true,\"temperature\": 0,\"shortForecast\": \"missing\"}];\n\n\n\nclass WeatherApi extends React.Component {\n    //set our initial state to empty array\n    state = { weatherData: [], hourlyWeatherData: [], weeklyForecast: [], errorMessge: '' };\n\n    componentWillMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) =>\n            fetch(`https://api.weather.gov/points/${position.coords.latitude},${position.coords.longitude}`)\n                .then((response) => response.json())\n                //set the state for weatherData\n                .then((responseData) => this.setState({ weatherData: responseData }))\n                //call getLocalForcast once api data is returned and make second call to get local forecast\n                .then(() => this.getLocalForcast(this.state.weatherData)),\n                (err) => this.setState({ errorMessge: err.message })\n        );\n    }\n\n    getLocalForcast(responseData) {\n        //once we have the location forecast URL make call to second API for forecast details.\n            const location = responseData.properties.forecastHourly;\n            const weekly = responseData.properties.forecast;\n\n            fetch(location)\n                .then((response) => response.json())\n                //set the state to 5 day forecast data\n                .then((responseData) => this.setState({ hourlyWeatherData: responseData.properties.periods }))\n                //if response returns an error just serve up a genaric background without hourly forecast\n                .catch(error => this.setState({ hourlyWeatherData: dummy }) );\n\n            fetch(weekly)\n                .then((response) => response.json())\n                //set the state to weekly forecast data\n                .then((responseData) => this.setState({ weeklyForecast: responseData.properties.periods }))\n                .catch(error => this.setState({ weeklyForecast: dummy }) );\n        }\n\n\n\n\n    renderWeekly() {\n        return this.state.weeklyForecast.map(weekly => <WeeklyDetail key={weekly.number} weekly={weekly} />); \n    }\n\n    renderLocation() {\n        if (this.state.weatherData.hasOwnProperty('properties')) {\n            return <LocationDetail location={this.state.weatherData.properties.relativeLocation.properties} />\n        }\n    }\n\n\n\n    renderContent() {\n        if(this.state.weatherData.length === 0) {\n            return <div><Loader errorText=\"Please accept the location request\" /></div>\n        }\n        if (this.state.weatherData.length !== 0 && !this.state.errorMessge) {\n            return (\n            <div className={this.state.hourlyWeatherData.slice(0, 1).map( week => getWeatherForBackground(week))}>\n            {this.renderLocation()}\n            <div className='TopSlider'>\n            {this.renderWeather(this.state.hourlyWeatherData)}\n            </div>\n            <div className=\"detailContainer\">\n                {this.renderWeekly()}\n                </div>\n                        </div>\n            )\n        }\n    }\n\n\n    render() {\n        console.log(this.state.hourlyWeatherData);\n        return (\n            <div>\n            { this.renderContent() }\n            </div>\n        )\n    }\n}\n\nexport default WeatherApi;\n"]},"metadata":{},"sourceType":"module"}